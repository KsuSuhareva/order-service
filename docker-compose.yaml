services:
  orderService:
    image: 'order-service:latest'
    build:
      context: ./order-sevice/order-sevice
    ports:
      - 9090:9090
    container_name: orderService
    hostname: orderService
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/order_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - GENERATENUMBERSERVICE_URL=http://generateService:9080/
    depends_on:
      - postgres
      - generateService
    links:
      - postgres
      - generateService
    networks:
      - frontend

  postgres:
    image: 'postgres:13.1-alpine'
    container_name: postgres
    hostname: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=order_db
    ports:
      - 5432:5432
    networks:
      - frontend

  generateService:
    image: 'generate-service:latest'
    build:
      context: ./number-generate-service/number-generate-service
    ports:
      - 9080:9080
    container_name: generateService
    hostname: generateService
    links:
      - redis
    networks:
      - frontend

  redis:
    image: redis
    ports:
      - "6379:6379"
    container_name: redis
    hostname: redis
    environment:
      - REDIS_PASSWORD=my-password
      - REDIS_PORT=6379
      - REDIS_DATABASES=16
    networks:
      - frontend

networks:
  frontend:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.host_binding_ipv4: "127.0.0.1"